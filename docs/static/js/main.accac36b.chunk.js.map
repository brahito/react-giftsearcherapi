{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OACI,mCACA,sBAAMC,SAbW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAtBkB,SAAEP,GAExBF,EAAcE,EAAEQ,OAAOF,e,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGoCC,UAAUH,GAH9C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAKrC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAQjB,EAAMkB,IAAMR,IACzB,4BAAIA,QCNHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAjBAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GAECH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAK1B,CAACtB,IAKGuB,EDtB0BK,CAAa5B,GAAjCa,EAFwB,EAE7BN,KAAae,EAFgB,EAEhBA,QAQrB,OACI,qCAEA,mCAAMtB,EAAN,OACEsB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAGYL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEpB1BkB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,aAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAK9B,OACI,qCACI,kDACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAII,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADHA,Y,MCdxC+B,IAASC,OACN,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.accac36b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n    \r\n    const handleInputChange = ( e ) =>{\r\n        \r\n        setinputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) =>{\r\n\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( cats => [ inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=hyNSI3kVhS2svKE6ACdptUF01fZnCW9B`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;    \r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n\r\n    console.log(id, title, url)\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src = { url } alt={ title }/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n  \r\n\r\n    \r\n\r\n    //getGifs();\r\n    \r\n    return (\r\n        <>\r\n    \r\n        <h3> {category} </h3>\r\n        { loading && <p>Loading</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map( img =>(\r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs =>{\r\n\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n   \r\n            });\r\n\r\n    }, [category])\r\n\r\n\r\n  \r\n\r\n    return state; \r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['perritos']);\r\n    \r\n  \r\n    return (\r\n        <>         \r\n            <h2>Buscador de Gifs</h2>\r\n            <AddCategory setCategories = { setCategories }/> \r\n            <hr/>\r\n\r\n\r\n            {\r\n                <ol> \r\n                    { \r\n                        categories.map( category => \r\n                            <GifGrid\r\n                                key = { category }\r\n                                category={ category } \r\n                            />\r\n                        )\r\n                    }\r\n                </ol>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n   <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}